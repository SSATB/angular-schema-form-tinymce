angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/tinymce/tinymce.html",'<div class="form-group" ng-class="{\'has-error\': hasError()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label> <textarea tx-tinymce="form.tinymceOptions" ng-model="$$value$$" style="background-color: white" sf-field-model="" sf-changed="form" schema-validate="form"></textarea> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div>')}]),angular.module("schemaForm-tinymce",["schemaForm","tx-tinymce"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,r,t,o){var s=function(r,o,s){if("string"===o.type&&"html"==o.format){var i=e.stdFormObj(r,o,s);return i.key=s.path,i.type="wysiwyg",s.lookup[t.stringify(s.path)]=i,i}};e.defaults.string.unshift(s),r.addMapping("bootstrapDecorator","wysiwyg","directives/decorators/bootstrap/tinymce/tinymce.html"),r.createDirective("wysiwyg","directives/decorators/bootstrap/tinymce/tinymce.html");var i=o.builders.sfField,a=o.builders.condition,c=o.builders.ngModel,n=(o.builders.ngModelOptions,[i,c,a]);r.defineAddOn("bootstrapDecorator","wysiwyg","directives/decorators/bootstrap/tinymce/tinymce.html",n)}]);